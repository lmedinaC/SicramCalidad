{"remainingRequest":"C:\\Users\\usser\\Desktop\\Nueva carpeta (2)\\proyect\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\Users\\usser\\Desktop\\Nueva carpeta (2)\\proyect\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\usser\\Desktop\\Nueva carpeta (2)\\proyect\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\usser\\Desktop\\Nueva carpeta (2)\\proyect\\src\\components\\MenuBar.vue?vue&type=template&id=4a501398&scoped=true&","dependencies":[{"path":"C:\\Users\\usser\\Desktop\\Nueva carpeta (2)\\proyect\\src\\components\\MenuBar.vue","mtime":1594663604895},{"path":"C:\\Users\\usser\\Desktop\\Nueva carpeta (2)\\proyect\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\usser\\Desktop\\Nueva carpeta (2)\\proyect\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"C:\\Users\\usser\\Desktop\\Nueva carpeta (2)\\proyect\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\usser\\Desktop\\Nueva carpeta (2)\\proyect\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIHJlbmRlciA9IGZ1bmN0aW9uKCkgewogIHZhciBfdm0gPSB0aGlzCiAgdmFyIF9oID0gX3ZtLiRjcmVhdGVFbGVtZW50CiAgdmFyIF9jID0gX3ZtLl9zZWxmLl9jIHx8IF9oCiAgcmV0dXJuIF92bS5fbSgwKQp9CnZhciBzdGF0aWNSZW5kZXJGbnMgPSBbCiAgZnVuY3Rpb24oKSB7CiAgICB2YXIgX3ZtID0gdGhpcwogICAgdmFyIF9oID0gX3ZtLiRjcmVhdGVFbGVtZW50CiAgICB2YXIgX2MgPSBfdm0uX3NlbGYuX2MgfHwgX2gKICAgIHJldHVybiBfYygiZGl2IiwgWwogICAgICBfYygibmF2IiwgeyBhdHRyczogeyBpZDogInNpZGViYXIiIH0gfSwgWwogICAgICAgIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAic2lkZWJhci1oZWFkZXIiIH0sIFsKICAgICAgICAgIF9jKCJpbWciLCB7CiAgICAgICAgICAgIHN0YXRpY0NsYXNzOiAiaW1nIGNvbnRlbnQtY2VudGVyIiwKICAgICAgICAgICAgYXR0cnM6IHsgc3JjOiByZXF1aXJlKCIuLi9hc3NldHMvbG9nby5wbmciKSwgYWx0OiAiIiB9CiAgICAgICAgICB9KSwKICAgICAgICAgIF9jKCJwIiwgeyBzdGF0aWNDbGFzczogImZvbnQtd2VpZ2h0LWJvbGQiIH0sIFtfdm0uX3YoIlNJQ1JBTSIpXSkKICAgICAgICBdKSwKICAgICAgICBfYygidWwiLCB7IHN0YXRpY0NsYXNzOiAibGlzdC11bnN0eWxlZCBjb21wb25lbnRzIiB9LCBbCiAgICAgICAgICBfYygicCIsIHsgc3RhdGljQ2xhc3M6ICJtLTAiIH0sIFtfdm0uX3YoIlBhY2llbnRlIDoiKV0pLAogICAgICAgICAgX2MoInAiLCB7IHN0YXRpY0NsYXNzOiAibWItMSIgfSwgW192bS5fdignIm5vbWJyZSInKV0pLAogICAgICAgICAgX2MoImxpIiwgeyBzdGF0aWNDbGFzczogImFjdGl2ZSIgfSwgWwogICAgICAgICAgICBfYygiYSIsIHsgYXR0cnM6IHsgaHJlZjogImluaWNpb1BhY2llbnRlLmh0bWwiIH0gfSwgWwogICAgICAgICAgICAgIF9jKCJpIiwgewogICAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICJmYSBmYS1ob21lIGljb25vIiwKICAgICAgICAgICAgICAgIGF0dHJzOiB7ICJhcmlhLWhpZGRlbiI6ICJ0cnVlIiB9CiAgICAgICAgICAgICAgfSksCiAgICAgICAgICAgICAgX3ZtLl92KCJJbmljaW8iKQogICAgICAgICAgICBdKQogICAgICAgICAgXSksCiAgICAgICAgICBfYygibGkiLCB7fSwgWwogICAgICAgICAgICBfYygKICAgICAgICAgICAgICAiYSIsCiAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICJkcm9wZG93bi10b2dnbGUiLAogICAgICAgICAgICAgICAgYXR0cnM6IHsKICAgICAgICAgICAgICAgICAgaHJlZjogIiNQZXJmaWxTdWJtZW51IiwKICAgICAgICAgICAgICAgICAgImRhdGEtdG9nZ2xlIjogImNvbGxhcHNlIiwKICAgICAgICAgICAgICAgICAgImFyaWEtZXhwYW5kZWQiOiAiZmFsc2UiCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICBbCiAgICAgICAgICAgICAgICBfYygiaSIsIHsKICAgICAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICJmYSBmYS11c2VyIGljb25vIiwKICAgICAgICAgICAgICAgICAgYXR0cnM6IHsgImFyaWEtaGlkZGVuIjogInRydWUiIH0KICAgICAgICAgICAgICAgIH0pLAogICAgICAgICAgICAgICAgX3ZtLl92KCJQZXJmaWwiKQogICAgICAgICAgICAgIF0KICAgICAgICAgICAgKSwKICAgICAgICAgICAgX2MoCiAgICAgICAgICAgICAgInVsIiwKICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBzdGF0aWNDbGFzczogImNvbGxhcHNlIGxpc3QtdW5zdHlsZWQiLAogICAgICAgICAgICAgICAgYXR0cnM6IHsgaWQ6ICJQZXJmaWxTdWJtZW51IiB9CiAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICBbCiAgICAgICAgICAgICAgICBfYygibGkiLCBbCiAgICAgICAgICAgICAgICAgIF9jKCJhIiwgeyBhdHRyczogeyBocmVmOiAicGVyZmlsUGFjaWVudGUuaHRtbCIgfSB9LCBbCiAgICAgICAgICAgICAgICAgICAgX3ZtLl92KCJUdSBwZXJmaWwiKQogICAgICAgICAgICAgICAgICBdKQogICAgICAgICAgICAgICAgXSksCiAgICAgICAgICAgICAgICBfYygibGkiLCBbCiAgICAgICAgICAgICAgICAgIF9jKCJhIiwgeyBhdHRyczogeyBocmVmOiAiYWN0dWFsaXphclBhY2llbnRlLmh0bWwiIH0gfSwgWwogICAgICAgICAgICAgICAgICAgIF92bS5fdigiQWN0dWFsaXphciBkYXRvcyIpCiAgICAgICAgICAgICAgICAgIF0pCiAgICAgICAgICAgICAgICBdKQogICAgICAgICAgICAgIF0KICAgICAgICAgICAgKQogICAgICAgICAgXSksCiAgICAgICAgICBfYygibGkiLCB7fSwgWwogICAgICAgICAgICBfYygKICAgICAgICAgICAgICAiYSIsCiAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICJkcm9wZG93bi10b2dnbGUiLAogICAgICAgICAgICAgICAgYXR0cnM6IHsKICAgICAgICAgICAgICAgICAgaHJlZjogIiNjaXRhc1N1Ym1lbnUiLAogICAgICAgICAgICAgICAgICAiZGF0YS10b2dnbGUiOiAiY29sbGFwc2UiLAogICAgICAgICAgICAgICAgICAiYXJpYS1leHBhbmRlZCI6ICJmYWxzZSIKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgIF9jKCJpIiwgewogICAgICAgICAgICAgICAgICBzdGF0aWNDbGFzczogImZhIGZhLWNhbGVuZGFyIGljb25vIiwKICAgICAgICAgICAgICAgICAgYXR0cnM6IHsgImFyaWEtaGlkZGVuIjogInRydWUiIH0KICAgICAgICAgICAgICAgIH0pLAogICAgICAgICAgICAgICAgX3ZtLl92KCJDaXRhcyIpCiAgICAgICAgICAgICAgXQogICAgICAgICAgICApLAogICAgICAgICAgICBfYygKICAgICAgICAgICAgICAidWwiLAogICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIHN0YXRpY0NsYXNzOiAiY29sbGFwc2UgbGlzdC11bnN0eWxlZCIsCiAgICAgICAgICAgICAgICBhdHRyczogeyBpZDogImNpdGFzU3VibWVudSIgfQogICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgX2MoImxpIiwgWwogICAgICAgICAgICAgICAgICBfYygiYSIsIHsgYXR0cnM6IHsgaHJlZjogIm51ZXZhQ2l0YVBhY2llbnRlLmh0bWwiIH0gfSwgWwogICAgICAgICAgICAgICAgICAgIF92bS5fdigiTnVldmEgY2l0YSIpCiAgICAgICAgICAgICAgICAgIF0pCiAgICAgICAgICAgICAgICBdKSwKICAgICAgICAgICAgICAgIF9jKCJsaSIsIFsKICAgICAgICAgICAgICAgICAgX2MoImEiLCB7IGF0dHJzOiB7IGhyZWY6ICJtb2RpZmljYXJDaXRhUGFjaWVudGUuaHRtbCIgfSB9LCBbCiAgICAgICAgICAgICAgICAgICAgX3ZtLl92KCJBY3R1YWxpemFyIGNpdGEiKQogICAgICAgICAgICAgICAgICBdKQogICAgICAgICAgICAgICAgXSkKICAgICAgICAgICAgICBdCiAgICAgICAgICAgICkKICAgICAgICAgIF0pLAogICAgICAgICAgX2MoImxpIiwge30sIFsKICAgICAgICAgICAgX2MoCiAgICAgICAgICAgICAgImEiLAogICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIHN0YXRpY0NsYXNzOiAiZHJvcGRvd24tdG9nZ2xlIiwKICAgICAgICAgICAgICAgIGF0dHJzOiB7CiAgICAgICAgICAgICAgICAgIGhyZWY6ICIjQnV6b25TdWJtZW51IiwKICAgICAgICAgICAgICAgICAgImRhdGEtdG9nZ2xlIjogImNvbGxhcHNlIiwKICAgICAgICAgICAgICAgICAgImFyaWEtZXhwYW5kZWQiOiAiZmFsc2UiCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICBbCiAgICAgICAgICAgICAgICBfYygiaSIsIHsKICAgICAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICJmYSBmYS1maWxlIGljb25vIiwKICAgICAgICAgICAgICAgICAgYXR0cnM6IHsgImFyaWEtaGlkZGVuIjogInRydWUiIH0KICAgICAgICAgICAgICAgIH0pLAogICAgICAgICAgICAgICAgX3ZtLl92KCJCdXrDs24iKQogICAgICAgICAgICAgIF0KICAgICAgICAgICAgKSwKICAgICAgICAgICAgX2MoCiAgICAgICAgICAgICAgInVsIiwKICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBzdGF0aWNDbGFzczogImNvbGxhcHNlIGxpc3QtdW5zdHlsZWQiLAogICAgICAgICAgICAgICAgYXR0cnM6IHsgaWQ6ICJCdXpvblN1Ym1lbnUiIH0KICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgIF9jKCJsaSIsIFsKICAgICAgICAgICAgICAgICAgX2MoImEiLCB7IGF0dHJzOiB7IGhyZWY6ICIjIiB9IH0sIFsKICAgICAgICAgICAgICAgICAgICBfdm0uX3YoIkNpdGFzIHBlbmRpZW50ZXMiKQogICAgICAgICAgICAgICAgICBdKQogICAgICAgICAgICAgICAgXSksCiAgICAgICAgICAgICAgICBfYygibGkiLCBbCiAgICAgICAgICAgICAgICAgIF9jKCJhIiwgeyBhdHRyczogeyBocmVmOiAiIyIgfSB9LCBbX3ZtLl92KCJDaXRhcyBwYXNhZGFzIildKQogICAgICAgICAgICAgICAgXSkKICAgICAgICAgICAgICBdCiAgICAgICAgICAgICkKICAgICAgICAgIF0pLAogICAgICAgICAgX2MoImxpIiwgWwogICAgICAgICAgICBfYygiYSIsIHsgYXR0cnM6IHsgaHJlZjogIiMiIH0gfSwgWwogICAgICAgICAgICAgIF9jKCJpIiwgewogICAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICJmYSBmYS1hcnJvdy1sZWZ0IGljb25vIiwKICAgICAgICAgICAgICAgIGF0dHJzOiB7ICJhcmlhLWhpZGRlbiI6ICJ0cnVlIiB9CiAgICAgICAgICAgICAgfSksCiAgICAgICAgICAgICAgX3ZtLl92KCIgU2FsaXIiKQogICAgICAgICAgICBdKQogICAgICAgICAgXSkKICAgICAgICBdKQogICAgICBdKQogICAgXSkKICB9Cl0KcmVuZGVyLl93aXRoU3RyaXBwZWQgPSB0cnVlCgpleHBvcnQgeyByZW5kZXIsIHN0YXRpY1JlbmRlckZucyB9"}]}